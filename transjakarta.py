# -*- coding: utf-8 -*-
"""Transjakarta.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18QOckILdw_lLAkO2HoBnCvePHEXS-Fv0

### **Load atau Import Data**
"""

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(r'/content/dfTransjakarta.csv')

df.head()

df.tail()

"""### **Data Cleaning**"""

# Melihat tipe data
df.dtypes

# Melihat berapa banyak data yang terduplikat
df.duplicated().sum()

# Menghapus data yang terduplikat (jika ada)
df.drop_duplicates(inplace=True)

# Melihat berapa banyak data dari kolom yang null
df.isnull().sum()

# menghapus baris dari kolom-kolom yang kosong atau null
df.dropna(subset=['tapOutStopsLat'], inplace=True)
df.dropna(subset=['tapOutStopsLon'], inplace=True)
df.dropna(subset=['tapOutStopsName'], inplace=True)
df.dropna(subset=['tapOutStopsLon'], inplace=True)
df.dropna(subset=['tapOutTime'], inplace=True)
df.dropna(subset=['tapInStopsLat'], inplace=True)
df.dropna(subset=['tapInStopsLon'], inplace=True)
df.dropna(subset=['stopEndSeq'], inplace=True)
df.dropna(subset=['corridorID'], inplace=True)
df.dropna(subset=['corridorName'], inplace=True)
df.dropna(subset=['tapInStops'], inplace=True)
df.dropna(subset=['tapOutStops'], inplace=True)
df.dropna(subset=['payAmount'], inplace=True)

# Ubah kolom 'tapInTime' dan 'TapOutTime' menjadi datetime
df['tapInTime'] = pd.to_datetime(df['tapInTime'])
df['tapOutTime'] = pd.to_datetime(df['tapOutTime'])

"""### **Exploratory Data Analysis (EDA)**"""

import numpy as np

# Membandingkan jumlah pengguna berdasarkan jenis kelamin
count_data = df['payCardSex'].value_counts()

# Menentukan warna
colors = ['Blue' if sex == 'M' else 'pink' for sex in count_data.index]

# Plot
count_data.plot(kind='pie', autopct='%1.1f%%', figsize=(6,6), colors=colors, title='Jenis Kelamin')
plt.ylabel('')  # Supaya tidak ada label di sumbu Y
plt.show()

"""Jumlah pengguna Transjakarta berjenis kelamin perempuan lebih tinggi dibandingkan laki-laki. Salah satu faktor penyebabnya adalah kecenderungan laki-laki untuk lebih memilih kendaraan pribadi dibandingkan transportasi umum.."""

# Menghitung jumlah pengguna berdasarkan koridor paling ramai
count_data = df['corridorID'].value_counts().head(10)

# Plot
count_data.plot(kind='bar', title='Koridor Paling Ramai')
plt.xlabel('Koridor')
plt.ylabel('Total Pengguna')
plt.show()

"""Koridor 1T (Cibubur – Balai Kota) mencatat jumlah pengguna tertinggi di layanan Transjakarta, didorong oleh tingginya mobilitas komuter dari kawasan suburban menuju pusat kota."""

# Menghitung jumlah pengguna berdasarkan koridor paling sepi
count_data = df['corridorID'].value_counts().tail(10)

# Plot
count_data.plot(kind='bar', title='Koridor Paling Sepi')
plt.xlabel('Koridor')
plt.ylabel('Total Pengguna')
plt.show()

"""Koridor M5 (Kampung Melayu - Ancol) menjadi rute yang mencatat jumlah pengguna terendah di layanan Transjakarta. Angka ini kemungkinan dipengaruhi oleh waktu operasional koridor di malam hari."""

# Menghitung jumlah pengguna per halte paling ramai untuk tap in
count_data = df['tapInStopsName'].value_counts().head(10)

# Plot
count_data.plot(kind='bar', title='Halte Paling Ramai Untuk Tap In')
plt.xlabel('Halte')
plt.ylabel('Jumlah Pengguna')
plt.show()

"""Halte Penjaringan mencatat angka tap in tertinggi di layanan Transjakarta. Ini menunjukkan bahwa kawasan tersebut menjadi titik keberangkatan utama bagi penumpang, yang kemungkinan disebabkan oleh tingginya jumlah penduduk, keterbatasan transportasi alternatif, atau aksesibilitas halte yang baik."""

# Menghitung jumlah pengguna per halte paling ramai untuk tap out
count_data = df['tapOutStopsName'].value_counts().head(10)

# Plot
count_data.plot(kind='bar', title='Halte Paling Ramai Untuk Tap Out')
plt.xlabel('Halte')
plt.ylabel('Jumlah')
plt.show()

"""Halte BKN (Halte Cawang Cililitan di Tahun 2025) mencatat jumlah tap out tertinggi di layanan Transjakarta. Hal ini mengindikasikan bahwa kawasan sekitar halte merupakan tujuan utama penumpang, kemungkinan besar karena keberadaan kantor-kantor pemerintah atau instansi strategis di area tersebut."""

# Menghitung jumlah penggunaan metode-metode pembayaran
count_data = df['payCardBank'].value_counts()

# Plot
count_data.plot(kind='bar', title='Metode Pembayaran')
plt.xlabel('Metode Pembayaran')
plt.ylabel('Jumlah')
plt.show()

"""Metode pembayaran terbanyak digunakan oleh penumpang adalah Kartu Uang Elektronik (KUE) dari Bank DKI."""

# Ekstrak jam (0–23)
df['jam'] = df['tapInTime'].dt.hour

# Hitung jumlah penumpang per jam
frekuensi_jam = df['jam'].value_counts().sort_index()

# Plot
plt.figure(figsize=(10, 5))
frekuensi_jam.plot(kind='bar')
plt.title('Frekuensi Penumpang per Jam')
plt.xlabel('Jam (0–23)')
plt.ylabel('Jumlah Penumpang')
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()

"""Waktu penggunaan transjakarta tertinggi tercatat pada pukul 6 pagi dan pukul 17 sore. Ini dipengaruhi oleh jam keberangkatan dan kepulangan kerja mayoritas pengguna."""

# Ekstrak hari (0 = Senin, 6 = Minggu)
df['hari'] = df['tapInTime'].dt.dayofweek

# Buat mapping angka ke nama hari
nama_hari = ['Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu', 'Minggu']
df['nama_hari'] = df['hari'].map(lambda x: nama_hari[x])

# Hitung jumlah penumpang per hari
frekuensi_hari = df['nama_hari'].value_counts().reindex(nama_hari)

# Plot
plt.figure(figsize=(10, 5))
frekuensi_hari.plot(kind='bar')
plt.title('Frekuensi Penumpang per Hari')
plt.xlabel('Hari')
plt.ylabel('Jumlah Penumpang')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""Hari dengan tingkat penggunaan Transjakarta tertinggi tercatat pada hari Senin hingga Jumat. Pola ini mencerminkan aktivitas perkantoran yang berlangsung pada hari kerja."""